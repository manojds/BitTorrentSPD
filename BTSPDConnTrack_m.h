//
// Generated file, do not edit! Created by opp_msgc 4.2 from applications/BitTorrentSPD/BTSPDConnTrack.msg.
//

#ifndef _BTSPDCONNTRACK_M_H_
#define _BTSPDCONNTRACK_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0402
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Class generated from <tt>applications/BitTorrentSPD/BTSPDConnTrack.msg</tt> by opp_msgc.
 * <pre>
 * message BTSPDConnTrackNewConnMsg
 * {
 *     @omitGetVerb(true);
 *     string myName;
 *     string remoteIP; 
 *     bool activeConn;   
 * }
 * </pre>
 */
class BTSPDConnTrackNewConnMsg : public ::cMessage
{
  protected:
    opp_string myName_var;
    opp_string remoteIP_var;
    bool activeConn_var;

  private:
    void copy(const BTSPDConnTrackNewConnMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BTSPDConnTrackNewConnMsg&);

  public:
    BTSPDConnTrackNewConnMsg(const char *name=NULL, int kind=0);
    BTSPDConnTrackNewConnMsg(const BTSPDConnTrackNewConnMsg& other);
    virtual ~BTSPDConnTrackNewConnMsg();
    BTSPDConnTrackNewConnMsg& operator=(const BTSPDConnTrackNewConnMsg& other);
    virtual BTSPDConnTrackNewConnMsg *dup() const {return new BTSPDConnTrackNewConnMsg(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual const char * myName() const;
    virtual void setMyName(const char * myName);
    virtual const char * remoteIP() const;
    virtual void setRemoteIP(const char * remoteIP);
    virtual bool activeConn() const;
    virtual void setActiveConn(bool activeConn);
};

inline void doPacking(cCommBuffer *b, BTSPDConnTrackNewConnMsg& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, BTSPDConnTrackNewConnMsg& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>applications/BitTorrentSPD/BTSPDConnTrack.msg</tt> by opp_msgc.
 * <pre>
 * message BTSPDConnTrackConnDropMsg
 * {
 *     @omitGetVerb(true);
 *     string myName;
 *     string remoteIP;    
 * }
 * </pre>
 */
class BTSPDConnTrackConnDropMsg : public ::cMessage
{
  protected:
    opp_string myName_var;
    opp_string remoteIP_var;

  private:
    void copy(const BTSPDConnTrackConnDropMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BTSPDConnTrackConnDropMsg&);

  public:
    BTSPDConnTrackConnDropMsg(const char *name=NULL, int kind=0);
    BTSPDConnTrackConnDropMsg(const BTSPDConnTrackConnDropMsg& other);
    virtual ~BTSPDConnTrackConnDropMsg();
    BTSPDConnTrackConnDropMsg& operator=(const BTSPDConnTrackConnDropMsg& other);
    virtual BTSPDConnTrackConnDropMsg *dup() const {return new BTSPDConnTrackConnDropMsg(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual const char * myName() const;
    virtual void setMyName(const char * myName);
    virtual const char * remoteIP() const;
    virtual void setRemoteIP(const char * remoteIP);
};

inline void doPacking(cCommBuffer *b, BTSPDConnTrackConnDropMsg& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, BTSPDConnTrackConnDropMsg& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>applications/BitTorrentSPD/BTSPDConnTrack.msg</tt> by opp_msgc.
 * <pre>
 * message BTSPDConnTrackNodeCreationMsg
 * {
 *     @omitGetVerb(true);
 *     string myName;
 *     string myIP;
 *     double creationTime;    
 * }
 * </pre>
 */
class BTSPDConnTrackNodeCreationMsg : public ::cMessage
{
  protected:
    opp_string myName_var;
    opp_string myIP_var;
    double creationTime_var;

  private:
    void copy(const BTSPDConnTrackNodeCreationMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BTSPDConnTrackNodeCreationMsg&);

  public:
    BTSPDConnTrackNodeCreationMsg(const char *name=NULL, int kind=0);
    BTSPDConnTrackNodeCreationMsg(const BTSPDConnTrackNodeCreationMsg& other);
    virtual ~BTSPDConnTrackNodeCreationMsg();
    BTSPDConnTrackNodeCreationMsg& operator=(const BTSPDConnTrackNodeCreationMsg& other);
    virtual BTSPDConnTrackNodeCreationMsg *dup() const {return new BTSPDConnTrackNodeCreationMsg(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual const char * myName() const;
    virtual void setMyName(const char * myName);
    virtual const char * myIP() const;
    virtual void setMyIP(const char * myIP);
    virtual double creationTime() const;
    virtual void setCreationTime(double creationTime);
};

inline void doPacking(cCommBuffer *b, BTSPDConnTrackNodeCreationMsg& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, BTSPDConnTrackNodeCreationMsg& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>applications/BitTorrentSPD/BTSPDConnTrack.msg</tt> by opp_msgc.
 * <pre>
 * message BTSPDConnTrackDwlCompeteMsg
 * {
 *     @omitGetVerb(true);
 *     string myName;
 *     double completionTime;
 *     double duration;    
 * }
 * </pre>
 */
class BTSPDConnTrackDwlCompeteMsg : public ::cMessage
{
  protected:
    opp_string myName_var;
    double completionTime_var;
    double duration_var;

  private:
    void copy(const BTSPDConnTrackDwlCompeteMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BTSPDConnTrackDwlCompeteMsg&);

  public:
    BTSPDConnTrackDwlCompeteMsg(const char *name=NULL, int kind=0);
    BTSPDConnTrackDwlCompeteMsg(const BTSPDConnTrackDwlCompeteMsg& other);
    virtual ~BTSPDConnTrackDwlCompeteMsg();
    BTSPDConnTrackDwlCompeteMsg& operator=(const BTSPDConnTrackDwlCompeteMsg& other);
    virtual BTSPDConnTrackDwlCompeteMsg *dup() const {return new BTSPDConnTrackDwlCompeteMsg(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual const char * myName() const;
    virtual void setMyName(const char * myName);
    virtual double completionTime() const;
    virtual void setCompletionTime(double completionTime);
    virtual double duration() const;
    virtual void setDuration(double duration);
};

inline void doPacking(cCommBuffer *b, BTSPDConnTrackDwlCompeteMsg& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, BTSPDConnTrackDwlCompeteMsg& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>applications/BitTorrentSPD/BTSPDConnTrack.msg</tt> by opp_msgc.
 * <pre>
 * message BTSPDConnTrackIPtoNameMapMsg
 * {
 *     @omitGetVerb(true);
 *     string myIP;
 *     string myName;    
 * }
 * </pre>
 */
class BTSPDConnTrackIPtoNameMapMsg : public ::cMessage
{
  protected:
    opp_string myIP_var;
    opp_string myName_var;

  private:
    void copy(const BTSPDConnTrackIPtoNameMapMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BTSPDConnTrackIPtoNameMapMsg&);

  public:
    BTSPDConnTrackIPtoNameMapMsg(const char *name=NULL, int kind=0);
    BTSPDConnTrackIPtoNameMapMsg(const BTSPDConnTrackIPtoNameMapMsg& other);
    virtual ~BTSPDConnTrackIPtoNameMapMsg();
    BTSPDConnTrackIPtoNameMapMsg& operator=(const BTSPDConnTrackIPtoNameMapMsg& other);
    virtual BTSPDConnTrackIPtoNameMapMsg *dup() const {return new BTSPDConnTrackIPtoNameMapMsg(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual const char * myIP() const;
    virtual void setMyIP(const char * myIP);
    virtual const char * myName() const;
    virtual void setMyName(const char * myName);
};

inline void doPacking(cCommBuffer *b, BTSPDConnTrackIPtoNameMapMsg& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, BTSPDConnTrackIPtoNameMapMsg& obj) {obj.parsimUnpack(b);}


#endif // _BTSPDCONNTRACK_M_H_
