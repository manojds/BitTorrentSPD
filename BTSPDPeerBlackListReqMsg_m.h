//
// Generated file, do not edit! Created by opp_msgc 4.2 from applications/BitTorrentSPD/BTSPDPeerBlackListReqMsg.msg.
//

#ifndef _BTSPDPEERBLACKLISTREQMSG_M_H_
#define _BTSPDPEERBLACKLISTREQMSG_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0402
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Class generated from <tt>applications/BitTorrentSPD/BTSPDPeerBlackListReqMsg.msg</tt> by opp_msgc.
 * <pre>
 * packet BTSPDPeerBlackListReqMsg {
 * 
 *     string attackers[];
 * }
 * </pre>
 */
class BTSPDPeerBlackListReqMsg : public ::cPacket
{
  protected:
    opp_string *attackers_var; // array ptr
    unsigned int attackers_arraysize;

  private:
    void copy(const BTSPDPeerBlackListReqMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BTSPDPeerBlackListReqMsg&);

  public:
    BTSPDPeerBlackListReqMsg(const char *name=NULL, int kind=0);
    BTSPDPeerBlackListReqMsg(const BTSPDPeerBlackListReqMsg& other);
    virtual ~BTSPDPeerBlackListReqMsg();
    BTSPDPeerBlackListReqMsg& operator=(const BTSPDPeerBlackListReqMsg& other);
    virtual BTSPDPeerBlackListReqMsg *dup() const {return new BTSPDPeerBlackListReqMsg(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual void setAttackersArraySize(unsigned int size);
    virtual unsigned int getAttackersArraySize() const;
    virtual const char * getAttackers(unsigned int k) const;
    virtual void setAttackers(unsigned int k, const char * attackers);
};

inline void doPacking(cCommBuffer *b, BTSPDPeerBlackListReqMsg& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, BTSPDPeerBlackListReqMsg& obj) {obj.parsimUnpack(b);}


#endif // _BTSPDPEERBLACKLISTREQMSG_M_H_
